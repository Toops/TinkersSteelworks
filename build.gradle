buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}



apply plugin: 'forge'
apply plugin: 'curseforge'
apply plugin: 'maven-publish'

def build_number = 'CUSTOM'

if (System.getenv('BUILD_NUMBER') != null)
    build_number = System.getenv('BUILD_NUMBER')

group = package_group
archivesBaseName = mod_name
version = "${mc_version}-${mod_version}-${build_number}"

sourceCompatibility = 7
targetCompatibility = 7

import org.ajoberstar.grgit.Grgit

def gitHash = 'unknown'
if (new File(projectDir, '.git').exists()) {
    def repo = Grgit.open(project.file('.'))
    gitHash = repo.log().find().abbreviatedId
}

repositories {
    maven { url = "http://mobiusstrip.eu/maven/" } // Waila
    maven { url = "http://chickenbones.net/maven/" } // CCC & NEI
    maven { url = "http://dvs1.progwml6.com/files/maven/" } // TCon and Mantle
    maven { url = "http://tehnut.info/maven/" } // CookieCore
    //maven { url = "http://coloredlightscore.us.to/maven/chisel-2-dev/" } // chisel

	ivy {
		name "MineTweaker3"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module]-[revision].[ext]"
    }
}

dependencies {
    compile "tconstruct:TConstruct:${mc_version}-${tcon_version}:deobf"
    compile "mcp.mobius.waila:Waila:${WAILA_version}_${mc_version}"
    compile "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:dev"
    compile "codechicken:CodeChickenCore:${mc_version}-${ccc_version}:dev"
    compile "codechicken:NotEnoughItems:${mc_version}-${nei_version}:dev"
    compile "nf.fr.ephys.cookiecore:CookieCore:${mc_version}-${cookie_version}:deobf"
    //compile "com.cricketcraft.chisel:Chisel2:${chisel_version}:deobf"
	compile name: 'MineTweaker3', version: "Dev-${mc_version}-${minetweaker_version}", ext: 'jar'
	compile fileTree(dir: 'libs', include: '*.jar')
}

minecraft {
    version = "${forge_version}-${mc_version}"
    runDir = "run"

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

jar {
    classifier = ''
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Git-Hash": gitHash
    )
}

// add a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// add a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn sourceJar, javadocJar, deobfJar

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourceJar
            artifact javadocJar
            artifact deobfJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

curse {
    def apiKey_ = ''
    if (project.hasProperty('curseForgeApiKey')) {
        apiKey_ = project.curseForgeApiKey
    } else if (System.hasProperty('curseForgeApiKey')) {
        apiKey_ = System.getProperty('curseForgeApiKey')
    }

    apiKey = apiKey_

    projectId = '233076'
    releaseType = 'release'

    displayName = "${mod_name} ${version}"
    changelog = 'https://github.com/Ephys/TinkersSteelworks/commits/master'
    addGameVersion '1.7.10'

    additionalArtifact deobfJar

    relatedProject 'cookiecore': 'requiredLibrary'
    relatedProject 'tinkers-construct': 'requiredLibrary'
}